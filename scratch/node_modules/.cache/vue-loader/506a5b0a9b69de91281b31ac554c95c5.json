{"remainingRequest":"/home/ec2-user/.nvm/versions/node/v12.16.3/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ec2-user/vue-study/scratch/app.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/ec2-user/vue-study/scratch/app.vue","mtime":1589001096423},{"path":"/home/ec2-user/.nvm/versions/node/v12.16.3/lib/node_modules/@vue/cli-service-global/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ec2-user/.nvm/versions/node/v12.16.3/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/ec2-user/.nvm/versions/node/v12.16.3/lib/node_modules/@vue/cli-service-global/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/ec2-user/.nvm/versions/node/v12.16.3/lib/node_modules/@vue/cli-service-global/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ec2-user/.nvm/versions/node/v12.16.3/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLkhvbWUgewogIGNvbG9yOiAicmVkIjsKfQouQWJvdXQgewogIGNvbG9yOiAiYmx1ZSI7Cn0KLkNvbnRhY3QgewogIGNvbG9yOiAiZ3JlZW4iOwp9Cg=="},{"version":3,"sources":["app.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"app.vue","sourceRoot":".","sourcesContent":["<template>\n  <div id=\"app\">\n    <div>\n      <h3>Hello!</h3>\n    </div>\n    <div>\n      <!-- 単一ファイルコンポーネントだと@でイベントを検知してメソッドを呼ぶ-->\n      <h3>クリックすると数字が増える</h3>\n      <p>{{ number }}</p>\n      <button @click=\"increment\">click</button>\n    </div>\n    <div>\n      <h3>v-modelを使った双方向バインディング</h3>\n      <!-- formのinputなど双方向バインディングにはv-modelを使う．-->\n      <!-- 入力されたイベントを検知してメソッドを呼ぶみたいなことをしなくていい．-->\n      <input v-model=\"message\" placeholder=\"edit me\" />\n      <p>{{ message }}</p>\n    </div>\n\n    <div>\n      <h3>renderプロパティを使って動的にタグを生成</h3>\n      <!-- renderプロパティで動的にタグそのものを作れる-->\n      {{ message_render }}\n    </div>\n    <div>\n      <h3>v-bindでタグの属性を変更する．下の文章のサイズが大きくなる．</h3>\n      <p v-bind:style=\"{ fontSize: fontSize + 'px' }\">{{ message_style_change }}</p>\n      <input type=\"number\" v-model.number=\"fontSize\" placeholder=\"10\" />\n    </div>\n    <div>\n      <ul>\n        <li\n          v-for=\"item in menuItems\"\n          :key=\"item\"\n          v-on:click=\"selected = item\"\n          v-bind:class=\"{ selected: selected == item}\"\n        >{{item}}</li>\n      </ul>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  el: \"#app\",\n  // dataは関数にしてリターンでオブジェクトを返すようにする．\n  data() {\n    return {\n      number: 0,\n      message: \"please type!\",\n      message_render: \"Hello Vue!\",\n      message_style_change: \"This sentence becomes bigger.\",\n      fontSize: 10,\n      selected: \"Home\",\n      menuItems: [\"Home\", \"About\", \"Contact\"]\n    };\n  },\n  // renderに設定されているのはアロー関数\n  render: element => {\n    return element(\n      \"p\",\n      // styleが保存時にシングルクオートが取れてしまって反映されない．\n      { style: \"font-size:20pt; color:red;\" },\n      this.message_render\n    );\n  },\n  methods: {\n    increment() {\n      this.number += 1;\n    }\n  }\n};\n</script>\n\n<style>\n.Home {\n  color: \"red\";\n}\n.About {\n  color: \"blue\";\n}\n.Contact {\n  color: \"green\";\n}\n</style>"]}]}